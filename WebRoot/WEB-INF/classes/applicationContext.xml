<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="molab" />
    
    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
    
    <!-- 视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/views/"/>
    	<property name="suffix" value=".jsp"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>
    
    <!-- 文件上传 -->
    <bean id="multipartResolver"
    	class="molab.main.java.util.fileupload.CommonsMultipartResolverExt"
    	p:defaultEncoding="UTF-8"
    	p:uploadTempDir="upload/temp/" />
    	
	<!-- 拦截器 -->
	<!--  
    <mvc:interceptors>
    	<bean class="molab.main.java.interceptor.AuthorizationInterceptor"/>
	</mvc:interceptors>
	-->
	<mvc:interceptors>
    	<bean class="molab.main.java.interceptor.CodingInterceptor"/>
	</mvc:interceptors>
	<!--  
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**"/>
			<mvc:exclude-mapping path="/home"/>
			<mvc:exclude-mapping path="/signup"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/index"/>
			<bean class="molab.main.java.interceptor.SessionInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	-->
	
	<!-- 全局异常配置 start  控制器异常处理-->  
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	    <property name="exceptionMappings">  
	        <props>  
	            <prop key="java.lang.Exception">errors/error</prop>  
	            <prop key="java.lang.Throwable">errors/error</prop>  
	        </props>  
	    </property>  
	    <property name="statusCodes">  
	        <props>  
	            <prop key="errors/error">500</prop>  
	            <prop key="errors/error">404</prop>  
	        </props>  
	    </property>  
	    <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
	    <property name="warnLogCategory" value="WARN"></property>  
	    <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
	    <property name="defaultErrorView" value="errors/error"></property>  
	    <!-- 默认HTTP状态码 -->  
	    <property name="defaultStatusCode" value="500"></property>  
	</bean>  
	<!-- 全局异常配置 end -->
	
	<bean id="springContextUtil" class="molab.main.java.util.SpringContextUtil"></bean>
	
	<!-- 邮件配置 start -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.exmail.qq.com" />
		<property name="port" value="465" />
		<property name="username" value="no-reply@apptry.cn" />
		<property name="password" value="apptry123*()" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
			</props>
		</property>
	</bean>

	<!-- freemarker config -->
	<!--  
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemaker/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>
	-->

	<!-- velocity config -->
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/WEB-INF/vm/" />
		<property name="velocityProperties">
			<props>
				<!-- <prop key="velocimacro.library">*.vm</prop> -->
				<prop key="default.contentType">text/html; charset=utf-8</prop>
				<prop key="output.encoding">utf-8</prop>
				<prop key="input.encoding">utf-8</prop>
			</props>
		</property>
	</bean>

	<bean id="mailMessage" scope="prototype" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="no-reply@apptry.cn" />
	</bean>

	<bean id="mailEngine" class="molab.main.java.util.mail.MailEngine">
		<property name="mailSender" ref="mailSender" />
		<!-- 如果使用Vilocity -->
		<property name="velocityEngine" ref="velocityEngine" />
		<!-- 如果使用FreeMaker -->
		<!-- <property name="freeMarkerConfigurer" ref="freeMarkerConfigurer" /> -->
	</bean>
	<!-- 邮件配置 end -->
	
	<bean id="init" class="molab.main.java.util.Init" init-method="init"></bean>
	
</beans> 